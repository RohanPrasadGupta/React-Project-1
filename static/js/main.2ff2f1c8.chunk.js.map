{"version":3,"sources":["Component/Navbar.js","Component/Textform.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","Alert","alert","role","msg","App","setMode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ff2f1c8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n      \r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active mx-3\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">About</a>\r\n            </li>\r\n            </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}` } >\r\n            <input className=\"form-check-input mx-2\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Change Theam</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    \r\n    )\r\n}\r\nNavbar.defaultProps={\r\n    title:'HELLOW'\r\n}\r\n\r\n\r\n  ","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n    const Uppercasign = () =>{\r\n        // console.log(\"Button Clicked\"+ text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('UPPERCASE Is Clicked','success')\r\n\r\n        }\r\n        const Lowercasign = () =>{\r\n            // console.log(\"Button Clicked\"+ text);\r\n            let newText= text.toLowerCase();\r\n            setText(newText)\r\n            props.showAlert('LOWERCASE is Clicked','success')\r\n    \r\n            }\r\n           \r\n        const handleOnChange=(event)=>{\r\n            // console.log(\"On change\");\r\n            setText(event.target.value)\r\n            \r\n         }\r\n\r\n        const [text, setText] = useState('Enter Your Text:');\r\n\r\n     \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#121212'}}>\r\n\r\n            <h1>{props.heading}</h1>\r\n            \r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode==='dark'?'white':'#121212', color: props.mode==='dark'?'#121212':'white'}}\r\n                                 value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-success mx-3\" onClick={Uppercasign}>Convert to Upper CASE </button>\r\n            \r\n            <button className=\"btn btn-danger mx-3\" onClick={Lowercasign}>Convert to Lower CASE </button>\r\n\r\n            \r\n        </div>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#121212'}}>\r\n            <h1>The Counted Character are:</h1>\r\n            <p>\r\n             {text.split(\" \").length} words and {text.length} Character\r\n            </p>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n       \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                \r\n            <strong>{props.alert.type} </strong>{props.alert.msg}\r\n             </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './Component/Navbar';\nimport Textform from './Component/Textform';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n\n\n\n\nfunction App() {\n    \n  const [mode, setMode] = useState('light');\n\n  const [alert, setalert] = useState(null);\n\n  const showAlert=(message, type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert('null')\n    },1500);\n  }\n\n  const toggleMode= ()=>{\n    if(mode ==='light')\n    {\n    setMode('dark');\n    document.body.style.backgroundColor='#121212';\n    showAlert('Dark mode Enabled','success')\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor='white';\n        showAlert('Normal mode Enabled','success')\n      }\n  }\n\n\n  return (\n    <>\n    \n      <Navbar title='HY world' mode={mode} toggleMode={toggleMode}/ >\n\n        <Alert alert={alert}/>\n\n        <div className=\"container my-3\">\n       \n          <Textform showAlert={showAlert} mode={mode} heading=\"Enter the Text\" />\n          \n        </div>\n       \n\n\n        \n    \n   </>\n     );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}